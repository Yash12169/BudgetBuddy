// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User{
  id String @id 
  email String @unique
  firstName String
  lastName String
  profileImage String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt



  financial financials?
  debt debt[]
  emergencyFund emergencyFund?
}

model financials{
  id String @id @default(cuid())
  userId String @unique
  salary Int
  expenses Int
  extraExpenses Int
  insurancePremium Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User  @relation(fields: [userId],references: [id],onDelete: Cascade)
}

model debt{
  id String @id @default(cuid())
  userId String 
  loanAmount Int
  loanTenure Int
  interestRate Int
  emiAmount Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  user User @relation(fields: [userId],references: [id],onDelete: Cascade)
}

model emergencyFund{
  id String @id  @default(cuid())
  userId String @unique
  emergencyFund Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [userId],references: [id],onDelete: Cascade)
}

model LifeGoal {
  id                  String   @id @default(uuid())
  userId              String
  title               String
  targetAmount        Float
  adjustedTargetAmount Float
  yearsToGoal         Int
  category            String
  currentSalary       Float      
  annualIncrementRate Float      
  forecastedSalary    Float
  isAchievable        Boolean
  priority              Int      @default(3)
  createdAt           DateTime @default(now())
}
